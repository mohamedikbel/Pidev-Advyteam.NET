@model domain.entities.formation

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section>
    <!-- Page content-->
    <div class="content-wrapper">
        <div class="content-heading">Ajouter Formation</div>
        <!-- Zero Configuration-->
        <div class="panel panel-default">
            <div class="panel-heading ">
                <a href="@Url.Action("Index", "formations")" class="btn btn-labeled btn-default">
                    <span class="btn-label">
                        <i class="fa fa-arrow-left"></i>
                    </span> PRECEDENT
                </a>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                   

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.date_debut, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.date_debut, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.date_debut, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.date_fin, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.date_fin, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.date_fin, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.img, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.img, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.titre, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.titre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.titre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                               @Html.DropDownListFor(model => model.type, new SelectList(ViewBag.lst, "Value", "Text"))
                                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.formateur_id, "formateur", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("formateur_id", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.formateur_id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" class="mb-sm btn btn-inverse "><em class="fa fa-pencil-square-o">Ajouter</em></button>
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
    $(function () {
        $("#type").addClass("form-control m-b");
        var sm = '@TempData["er"]';
        if (sm != '')
            alertify.error(sm);
    });
    </script>
}
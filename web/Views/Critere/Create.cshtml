@model domain.critere

@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

        <div class="form-horizontal" >
            <h4>Ajouter un nouveau critére</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.description,"Description", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.niveau,"Niveau", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.niveau, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.niveau, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="col-md-10">
                @Html.DropDownListFor(model => model.emlployeid, new SelectList(ViewBag.evaluation, "id", "nom"), new { htmlAttributes = new { @class = "selectpicker border rounded" } })
                @Html.ValidationMessageFor(model => model.emlployeid, "", new { @class = "text-danger" })
            </div>*@

                        <div class="form-group">
            @Html.LabelFor(model => model.emlployeid, "choisir l'évaluation a attribuer pour ce critére", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
        @Html.DropDownListFor(model => model.emlployeid, new SelectList(ViewBag.evaluation, "id", "nom"), new { htmlAttributes = new { @class = "selectpicker border rounded" } })
                @Html.ValidationMessageFor(model => model.emlployeid, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="alert-success">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Ajouter" class="btn btn-default" />
                </div>
            </div>
        </div>
        }

        <div >
            @Html.ActionLink("Retour vers la listes des critéres", "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
